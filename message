
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 8.0.23 MySQL Community Server - GPL

Copyright (c) 2000, 2021, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

==========================================================================================
https://www.makeareadme.com/
==========================================================================================


The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
ChooChoodeMacBook-Pro:~ choochoo$ cat .bash_profile

# Setting PATH for Python 3.7
# The original version is saved in .bash_profile.pysave
PATH="/Library/Frameworks/Python.framework/Versions/3.7/bin:${PATH}"
export PATH

# Setting PATH for Python 3.7
# The original version is saved in .bash_profile.pysave
PATH="/Library/Frameworks/Python.framework/Versions/3.7/bin:${PATH}"
export PATH
export PATH=/user/local/mysql/bin:$PATH
export PATH=/user/local/mysql/bin:$PATH
export PATH=/usr/local/mysql/bin:$PATH
export PATH=${PATH}:/usr/local/mysql/bin/
ChooChoodeMacBook-Pro:~ choochoo$ mysql -u root -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 9
Server version: 8.0.23 MySQL Community Server - GPL

Copyright (c) 2000, 2021, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
==========================================================================================
https://www.makeareadme.com/
==========================================================================================

1. mysql -u root -p

2. CREATE DATABASE test;
SHOW DATABASES;
3. USE test;
SHOW TABLES;


DROP TABLE tablename
DROP DATABASE databasename

4.
mysql> CREATE TABLE user(
    -> id BIGINT AUTO_INCREMENT,
    -> name VARCHAR(255) NOT NULL,
    -> username VARCHAR(255) NOT NULL,
    -> password VARCHAR(255) NOT NULL,
    -> time DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
    -> PRIMARY KEY(id)
    -> );

==========================================================================================

==========================================================================================
mysql> CREATE TABLE message(
    -> id BIGINT AUTO_INCREMENT,
    -> user_id BIGINT NOT NULL,
    -> content VARCHAR(255) NOT NULL,
    -> time DATETIME DEFAULT CURRENT_TIMESTAMP,
    -> PRIMARY KEY(id),
    -> FOREIGN KEY(user_id) REFERENCES user(id)
    -> );



==========================================================================================

==========================================================================================
SHOW COLUMNS FROM message;

使用 INSERT 指令新增一筆資料到 user 資料表中，
這筆資料的 username 和 password 欄位必須是 ply。
接著繼續新增至少 4 筆隨意的資料。
mysql> INSERT INTO test (`name`, `username`, `password`)
    -> VALUES ('Yo', 'ply', 'ply');

SELECT * FROM test;

使用 SELECT 指令取得所有在 user 資料表中的使用者資料。
SELECT user FROM test;

使用 SELECT 指令取得 user 資料表中總共有幾筆資料。
SELECT COUNT(*) FROM test;

使用 SELECT 指令取得所有在 user 資料表中的使用者資料，並按照 time 欄位，由近
到遠排序。
SELECT username FROM test ORDER BY time DESC;

使用 SELECT 指令取得 user 資料表中第 2 ~ 4 共三筆資料，並按照 time 欄位，由近
到遠排序
SELECT * FROM test WHERE id BETWEEN 2 AND 4 ORDER BY time DESC;


使用 SELECT 指令取得欄位 username 是 ply 的使用者資料。
SELECT * FROM test WHERE username = 'ply';

使用 SELECT 指令取得欄位 username 是 ply、且欄位 password 也是 ply 的資料。
SELECT * FROM test WHERE username = 'ply' AND password = 'ply';

使用 UPDATE 指令更新欄位 username 是 ply 的使用者資料，將資料中的 name 欄位
改成【丁滿】。
UPDATE test 
   -> SET name = '丁滿' 
   -> WHERE username = 'ply';

使用 DELETE 指令刪除所有在 user 資料表中的資料。
DELETE from test;

使用 SELECT 搭配 JOIN 的語法，取得所有留言，資料中須包含留言會員的姓名。
mysql> mysql> name, content from user join message on user.id = message.user_id;

使用 SELECT 搭配 JOIN 的語法，取得 user 資料表中欄位 username 是 ply 的所有留
言，資料中須包含留言會員的姓名。
mysql> select name, content from user join message on user.id = message.user_id where username = 'ply';
==========================================================================================

==========================================================================================
mysqldump -u root -p website > desktop/data.sql
